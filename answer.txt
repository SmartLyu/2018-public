
rpm --import ftp://192.168.1.254/centos/RPM-GPG-KEY-CentOS-7
vim /etc/fstab 
sed '/UUID/c/dev/vda1(这个根据自己的虚拟机配置)'
echo 'GRUB_DISABLE_LINUX_UUID="true"
GRUB_ENABLE_LINUX_LABEL="true"' >> /etc/default/grub 
grub2-mkconfig -o /boot/grub2/grub.cfg
yum install -y cloud-utils-growpart


真机执行
yum install -y libguestfs-tools
virsh shutdown 虚拟机名
virt-sysprep -d 虚拟机名







qemu-img create -b 后端盘.qcow2 -f qcow2 新建的虚拟机的.img
vim /etc/libvirt/qemu/node1.xml

virsh define /etc/libvirt/qemu/node1.xml 


growpart /dev/vda 1
xfs_growfs /
df -h







/var/lib/libvirt/images/First_set.yzy 
#!/bin/bash
LANG=en_US.UTF-8
growpart /dev/vda 1
xfs_growfs /
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
# Generated by dracut initrd
DEVICE="eth0"
ONBOOT="yes"
NM_CONTROLLED="no"
TYPE="Ethernet"
BOOTPROTO="static"
IPADDR="192.168.1.$1"
NETMASK="255.255.255.0"
EOF
systemctl restart network
echo 'Smart_'$1'.Lyu.com' > /etc/hostname
hostname Smart_${1}.Lyu.com
rm -f /root/First_set.yzy





/usr/local/bin/clone
#!/bin/bash
NET=192.168.1.
if [ $# -ne 1 ];then
  echo 'Error : you can try clone [number]'
  exit 1
else
  [ $1 -gt 0 &>/dev/null ]  && [ $1 -lt 100 ] && NUM=$1 || (echo 'Error : you can try clone [0<number<100]' ; exit 2)
fi

cd /var/lib/libvirt/images/
[ -f /var/lib/libvirt/images/node$NUM.img ] && echo 'this has been define' && ls node* && exit 3

qemu-img create -b node.qcow2 -f qcow2 node$NUM.img 15G
cd /etc/libvirt/qemu/
sed 's/node/node'$NUM'/' xml.example > yzy_node$NUM.xml
virsh define /etc/libvirt/qemu/yzy_node$NUM.xml
virsh start yzy_node$NUM
sleep 20s

IP=`arp -a | grep $(virsh dumpxml yzy_node$NUM | grep 'mac add' | awk -F\' '{print $2}') | awk -F\( '{print $2}' | awk -F\) '{print $1}'`

while :
do
  ping $IP -c 2
  [ $? -eq 0 ] && break
  sleep 1
done

scp -o StrictHostKeyChecking=no /var/lib/libvirt/images/First_set.yzy $IP:/root/
ssh -o StrictHostKeyChecking=no $IP "bash /root/First_set.yzy $NUM" &
sleep 2
kill $!












使用guestmount工具
– 支持离线挂载 raw、qcow2 格式虚拟机磁盘
– 可以在虚拟机关机的情冴下,直接修改磁盘中的文档
– 方便对虚拟机定制、修复、脚本维护

guestmount -a 虚拟机磁盘路径 -i /挂载点
chroot /挂载点






搭建DNS服务器：
yum install -y bind bind-chroot
vim /etc/named.conf 

……
        listen-on port 53 { 192.168.1.254; };
//      listen-on-v6 port 53 { ::1; };
……
        forwarders { 8.8.8.8; };
        recursion yes;

        dnssec-enable no;
        dnssec-validation no;
……

搭建chrony时间同步：


vim /etc/chrony.conf
# 注释里面的所有server，然后把下面信息写入 
server ntp.aliyun.com iburst
bindacqaddress 0.0.0.0
allow 0/0

测试时间同步：
chronyc sources -v | grep '^\^\*'				# 检查是否和外网的时间服务器同步
netstat -ntlup | grep chrony | grep 0.0.0.0:123		# 检查是否开启允许他人访问的时间同步服务




环境准备：

   1. 服务器openstack，10G内存，系统存储50G，存储空盘20G，两个网卡
# 修改memory、currentMemory、disk、需要再复制写一组disk文件、再写一个interface
virsh edit openstack
……
  <memory unit='KiB'>9961472</memory>
  <currentMemory unit='KiB'>9961472</currentMemory>
……
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/node1.img(存储镜像盘的位置)'/>
      <target dev='vda' bus='virtio'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x0'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/disk.img(存储镜像盘的位置)'/>
      <target dev='vdb' bus='virtio'/>
    </disk>
……
    <interface type='bridge'>
      <mac address='52:54:00:54:74:22'/>
      <source bridge='net1网络名'/>
      <model type='virtio'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>
    </interface>
    <interface type='bridge'>
      <source bridge='net2网络名'/>
      <model type='virtio'/>
    </interface>
……

前往虚拟机配置新网卡的IP地址

   2. 节点端nova，5G内存，系统存储50G，两个网卡(和服务器openstack的网卡可以互通)

……
  <memory unit='KiB'>5242880</memory>
  <currentMemory unit='KiB'>5242880</currentMemory>
……
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/node1.img(存储镜像盘的位置)'/>
      <target dev='vda' bus='virtio'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x0'/>
    </disk>
……
    <interface type='bridge'>
      <mac address='52:54:00:54:74:22'/>
      <source bridge='net1网络名'/>
      <model type='virtio'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>
    </interface>
    <interface type='bridge'>
      <source bridge='net2网络名'/>
      <model type='virtio'/>
    </interface>
……






